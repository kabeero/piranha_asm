  0 000h |                         | ;-------------------------------------------------------------------------------
  0 000h |                         | ; img-cds.npasm
  0 000h |                         | ;-------------------------------------------------------------------------------
  0 000h |                         | 
  0 000h |                         | #define MASK_AF        01000000b   ; Mask for ADC active flag
  0 000h |                         | #define MASK_NF        00000100b   ; Mask for negative flag
  0 000h |                         | #define BZ             BEQ         ; Alias branch if zero to branch if equal
  0 000h |                         | #define BNZ            BNE         ; Alias branch if not zero to branch if not equal
  0 000h |                         | #define START_OF_X     00000000b   ; Start address of X RAM
  0 000h |                         | #define START_OF_Y     01000000b   ; Start address of X RAM
  0 000h |                         | #define START_OF_Z     10000000b   ; Start address of X RAM
  0 000h |                         | 
  0 000h |                         | START:
  0 000h |                         | 
  0 000h | 8280h 1000001010000000b |     NOP                     ; Add dummy cycle since imaging immediately on 
  1 001h |                         |                             ;   reset is awkward for simulation purposes.
  1 001h |                         | 
  1 001h |                         | CLEAN_SLATE_INIT:
  1 001h |                         |  
  1 001h | 4100h 0100000100000000b |     LDR     r0, START_OF_X  ; Overwrite x ram with constant (note this is in gray code)
  2 002h | 45FFh 0100010111111111b |     LDR     r2, 255      
  3 003h | 42D0h 0100001011010000b |     LDR     r1, r0          ; Calculate the final address
  4 004h | 0340h 0000001101000000b |     ADD     r1, 64      
  5 005h |                         | 
  5 005h |                         | CLEAN_SLATE_LOOP:
  5 005h |                         | 
  5 005h | 4CF0h 0100110011110000b |     STR     r2, [r0]
  6 006h | 0101h 0000000100000001b |     ADD     r0, 1
  7 007h | 38D1h 0011100011010001b |     CMP     r0, r1
  8 008h | C051h 1100000001010001b |     BNE     CLEAN_SLATE_LOOP
  9 009h |                         |  
  9 009h |                         | ACQUIRE_RESET_IMAGE:
  9 009h |                         | 
  9 009h | 8220h 1000001000100000b |     IMG                     ; Acquire a new image from the ADCs with t_int = 0
 10 00Ah |                         | 
 10 00Ah |                         | WAIT_FOR_RESET_ADC:
 10 00Ah |                         | 
 10 00Ah | 40F4h 0100000011110100b |     LDR     r0, SR                ; Load the status register
 11 00Bh | 2140h 0010000101000000b |     AND     r0, MASK_AF           ; Check if the ADC is active
 12 00Ch | C0A1h 1100000010100001b |     BNZ     WAIT_FOR_RESET_ADC    ; Loop while the ADC is converting
 13 00Dh |                         | 
 13 00Dh |                         | MOVE_TO_Y_INIT:
 13 00Dh |                         | 
 13 00Dh | 4300h 0100001100000000b |     LDR     r1, START_OF_X
 14 00Eh | 4540h 0100010101000000b |     LDR     r2, START_OF_Y
 15 00Fh |                         | 
 15 00Fh |                         | MOVE_TO_Y:
 15 00Fh |                         | 
 15 00Fh | 40F1h 0100000011110001b |     LDR     r0, [r1]
 16 010h | 8820h 1000100000100000b |     GTB     r0
 17 011h | 48F2h 0100100011110010b |     STR     r0, [r2]
 18 012h | 0301h 0000001100000001b |     ADD     r1, 1
 19 013h | 0501h 0000010100000001b |     ADD     r2, 1
 20 014h | 3B40h 0011101101000000b |     CMP     r1, 64
 21 015h | C0F1h 1100000011110001b |     BNE     MOVE_TO_Y
 22 016h |                         | 
 22 016h |                         | ACQUIRE_IMAGE:
 22 016h |                         | 
 22 016h | 8220h 1000001000100000b |     IMG                     ; Acquire a new image from the ADCs with real t_int
 23 017h |                         | 
 23 017h |                         | OUTPUT_DATA_BLOCK_INIT:
 23 017h |                         | 
 23 017h |                         |     ; Begin outputting all of the data in z, which is the newly captured image.
 23 017h |                         | 
 23 017h | 4180h 0100000110000000b |     LDR     r0, START_OF_Z  ; Output z ram
 24 018h | 42D0h 0100001011010000b |     LDR     r1, r0          ; Calculate the final address
 25 019h | 0340h 0000001101000000b |     ADD     r1, 64      
 26 01Ah |                         | 
 26 01Ah |                         | OUTPUT_DATA_BLOCK_LOOP:
 26 01Ah |                         | 
 26 01Ah | 44F0h 0100010011110000b |     LDR     r2, [r0]
 27 01Bh | 4CF0h 0100110011110000b |     STR     r2, [r0]
 28 01Ch | A0F0h 1010000011110000b |     OUT     [r0], 0         ; Row 0
 29 01Dh | A2F0h 1010001011110000b |     OUT     [r0], 1         ; Row 1
 30 01Eh | A4F0h 1010010011110000b |     OUT     [r0], 2         ; Row 2
 31 01Fh | A6F0h 1010011011110000b |     OUT     [r0], 3         ; Row 3
 32 020h | A8F0h 1010100011110000b |     OUT     [r0], 4         ; Row 4
 33 021h | AAF0h 1010101011110000b |     OUT     [r0], 5         ; Row 5
 34 022h | ACF0h 1010110011110000b |     OUT     [r0], 6         ; Row 6
 35 023h | AEF0h 1010111011110000b |     OUT     [r0], 7         ; Row 7
 36 024h |                         |     
 36 024h | 0101h 0000000100000001b |     ADD     r0, 1
 37 025h | 38D1h 0011100011010001b |     CMP     r0, r1
 38 026h | C1A1h 1100000110100001b |     BNE     OUTPUT_DATA_BLOCK_LOOP
 39 027h |                         | 
 39 027h |                         | WAIT_FOR_ADC:
 39 027h |                         | 
 39 027h |                         |     ; At this point, the FSM for the ADC is running.  Read the status register
 39 027h |                         |     ; to check if the conversion is finished. (Note: very inefficient)
 39 027h |                         | 
 39 027h | 40F4h 0100000011110100b |     LDR     r0, SR          ; Load the status register
 40 028h | 2140h 0010000101000000b |     AND     r0, MASK_AF     ; Check if the ADC is active
 41 029h | C271h 1100001001110001b |     BNZ     WAIT_FOR_ADC    ; Loop while the ADC is converting
 42 02Ah |                         | 
 42 02Ah |                         | DIFFERENCE_INIT:
 42 02Ah |                         | 
 42 02Ah | 4540h 0100010101000000b |     LDR     r2, START_OF_Y
 43 02Bh | 4780h 0100011110000000b |     LDR     r3, START_OF_Z
 44 02Ch |                         | 
 44 02Ch |                         | DIFFERENCE:
 44 02Ch |                         | 
 44 02Ch | 40F2h 0100000011110010b |     LDR     r0, [r2]
 45 02Dh | 8820h 1000100000100000b |     GTB     r0
 46 02Eh | 48F3h 0100100011110011b |     STR     r0, [r3]
 47 02Fh | 0501h 0000010100000001b |     ADD     r2, 1
 48 030h | 0701h 0000011100000001b |     ADD     r3, 1
 49 031h | 3D40h 0011110101000000b |     CMP     r2, 64
 50 032h | C2C1h 1100001011000001b |     BNE     DIFFERENCE
 51 033h |                         | 
 51 033h |                         | END:
 51 033h |                         | 
 51 033h | C00Fh 1100000000001111b |     B       START
